=== C:/Users/Korisnik/Documents/projekti/chordsband/lib/maindart ===
import 'package:flutter/material.dart';
import 'app/router.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp.router(
      debugShowCheckedModeBanner: false,
      routerConfig: appRouter,
    );
  }
}



=== C:/Users/Korisnik/Documents/projekti/chordsband/lib/app/routerdart ===
import 'package:flutter/material.dart';
import 'package:go_router/go_router.dart';
import '../features/language/screens/language_select_screen.dart';
import '../features/profile_setup/screens/profile_setup_screen.dart';

final GoRouter appRouter = GoRouter(
  initialLocation: '/language',
  routes: [
    GoRoute(
      path: '/language',
      builder: (context, state) => const LanguageSelectScreen(),
    ),
    GoRoute(
      path: '/profile',
      builder: (context, state) => const ProfileSetupScreen(),
    ),
  ],
);



=== C:/Users/Korisnik/Documents/projekti/chordsband/lib/features/language/screens/language_select_screendart ===
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:go_router/go_router.dart';

class LanguageSelectScreen extends StatelessWidget {
  const LanguageSelectScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        leading: IconButton(
          icon: const Icon(Icons.close),
          onPressed: () => SystemNavigator.pop(),
        ),
        title: const Text('Odaberi jezik'),
        actions: [
          TextButton(
            onPressed: () {
              context.go('/profile');
            },
            child: const Text(
              'SETUP MAPA I VEZA',
              style: TextStyle(color: Colors.white),
            ),
          ),
        ],
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            ElevatedButton(
              onPressed: () {},
              child: const Text('HRVATSKI'),
            ),
            const SizedBox(height: 12),
            ElevatedButton(
              onPressed: () {},
              child: const Text('ENGLISH'),
            ),
            const SizedBox(height: 40),
            IconButton(
              icon: const Icon(Icons.arrow_forward, size: 40),
              onPressed: () {},
            )
          ],
        ),
      ),
    );
  }
}



=== C:/Users/Korisnik/Documents/projekti/chordsband/lib/features/profile_setup/screens/profile_setup_screendart ===
import 'package:flutter/material.dart';
import 'package:go_router/go_router.dart';

class ProfileSetupScreen extends StatefulWidget {
  const ProfileSetupScreen({super.key});

  @override
  State<ProfileSetupScreen> createState() => _ProfileSetupScreenState();
}

class _ProfileSetupScreenState extends State<ProfileSetupScreen> {
  final TextEditingController _nameController = TextEditingController();
  String? _selectedTextFolder;
  String? _selectedMediaFolder;
  String? _selectedConnection;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Postavljanje profila')),
      body: Padding(
        padding: const EdgeInsets.all(20.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            const Text('Ime profila (max 7 znakova):'),
            TextField(
              controller: _nameController,
              maxLength: 7,
              decoration: const InputDecoration(hintText: 'Unesi ime'),
            ),
            const SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                // TODO: odabir tekst fajlova
              },
              child: Text(_selectedTextFolder ?? 'Odaberi mapu s tekstovima'),
            ),
            const SizedBox(height: 12),
            ElevatedButton(
              onPressed: () {
                // TODO: odabir prateće mape
              },
              child: Text(_selectedMediaFolder ?? 'Odaberi prateću mapu'),
            ),
            const SizedBox(height: 20),
            const Text('Odaberi vezu:'),
            DropdownButton<String>(
              isExpanded: true,
              hint: const Text('Veza'),
              value: _selectedConnection,
              items: const [
                DropdownMenuItem(value: 'WiFi', child: Text('WiFi')),
                DropdownMenuItem(value: 'Hotspot', child: Text('Hotspot')),
                DropdownMenuItem(value: 'Bluetooth', child: Text('Bluetooth')),
                DropdownMenuItem(value: 'Nema', child: Text('Bez veze')),
              ],
              onChanged: (value) {
                setState(() {
                  _selectedConnection = value;
                });
              },
            ),
            const Spacer(),
            Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                IconButton(
                  icon: const Icon(Icons.arrow_back),
                  iconSize: 48,
                  onPressed: () {
                    context.go('/language');
                  },
                ),
                const SizedBox(width: 40),
                IconButton(
                  icon: const Icon(Icons.arrow_forward),
                  iconSize: 48,
                  onPressed: () {
                    // TODO: validacija i nastavak
                    context.go('/song-view');
                  },
                ),
              ],
            )
          ],
        ),
      ),
    );
  }
}



